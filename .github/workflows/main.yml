name: CI

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Create application.properties
        run: |
             mkdir -p src/main/resources
             echo "${{ secrets.properties }}" > src/main/resources/application.properties

      - name: Build Jar with Gradle
        run: ./gradlew clean bootJar

      - name: Verify Jar File Exists
        run: |
          if ls ./build/libs/*.jar 1> /dev/null 2>&1; then
            echo "Jar file exists."
          else
            echo "Jar file does not exist."
            exit 1
          fi

      - name: Make Directory for Jar
        run: mkdir -p deploy/jar

      - name: Copy Jar
        run: cp ./build/libs/*.jar ./deploy/jar

      - name: Clean for War Build
        run: ./gradlew clean

      - name: Build War with Gradle
        run: ./gradlew bootWar

      - name: Verify War File Exists
        run: |
          if ls ./build/libs/*.war 1> /dev/null 2>&1; then
            echo "War file exists."
          else
            echo "War file does not exist."
            exit 1
          fi

      - name: Make Directory for War
        run: mkdir -p deploy/war

      - name: Copy War
        run: cp ./build/libs/*.war ./deploy/war

      - name: Make Directory for Scripts
        run: mkdir -p deploy/scripts

      - name: Copy Scripts
        run: cp -r scripts/* deploy/scripts/

      - name: Copy AppSpec
        run: cp appspec.yml deploy/

      - name: Archive debug_back
        run: tar cvfz ./debug_back.tar.gz ./deploy

      - name: AWS Configure Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.CICD_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.CICD_SECRET_KEY }}
          aws-region: ap-northeast-2

      - name: Upload to S3
        run: aws s3 cp --region ap-northeast-2 ./debug_back.tar.gz s3://lsmback/archive/

      - name: Deploy with AWS CodeDeploy
        run: |
          aws deploy create-deployment \
          --application-name lsm_github_action \
          --deployment-config-name CodeDeployDefault.AllAtOnce \
          --deployment-group-name lsm_github_action_codedeploy \
          --s3-location bucket=lsmback,bundleType=tgz,key=archive/debug_back.tar.gz
